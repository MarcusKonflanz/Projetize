@page "/login"
@using Projetize.App.Models.Login
@using Projetize.App.Services
@using Projetize.App.Services.Auth
@layout LoginLayout
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<section @onkeyup="KeyPressHandled">
    <MudContainer Fixed="true" Class="d-flex justify-center align-center" Style="min-height: 100vh;">
        <MudPaper Elevation="8" Class="pa-6" Style="width:100%; max-width:400px; border-radius: 20px; margin-top: 1rem;">

            <div class="d-flex justify-center mb-4">
                <img src="/Images/logo.png" alt="Projetize Logo" style="height: 200px;" class="logo" />
            </div>

            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-2">Bem-vindo ao Projetize</MudText>
            <MudText Typo="Typo.body2" Align="Align.Center" Class="mb-4">Faça login para continuar</MudText>

            <MudForm @ref="form" Model="@loginModel" OnValidSubmit="HandleLogin">
                <MudTextField Label="Usuário" Variant="Variant.Outlined" @bind-Value="loginModel.Login" Margin="Margin.Dense" Required="true" RequiredError="Campo obrigatorio" FullWidth="true" />
                <MudTextField Label="Senha" Variant="Variant.Outlined"
                              @bind-Value="loginModel.Password"
                              Margin="Margin.Dense"
                              Required="true"
                              RequiredError="Campo obrigatorio"
                              FullWidth="true"
                              InputType="@PasswordInput"
                              Adornment="Adornment.End"
                              AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="ButtonTestclick"
                              AdornmentAriaLabel="Ver senha" />

                <MudButton Type="Submit" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" Class="mt-4" OnClick="HandlerLogin">
                    Entrar
                </MudButton>
            </MudForm>

            @if (loginError)
            {
                <MudAlert Severity="Severity.Error" Class="mt-4">
                    @errorMessage
                </MudAlert>
            }

            <MudText Align="Align.Center" Class="mt-3">
                <MudLink Href="/forgot-password">Esqueceu a senha?</MudLink>
                <br />
                <MudDivider />
                <MudLink Href="/register">Novo cadastro</MudLink>
            </MudText>
        </MudPaper>
    </MudContainer>
</section>

@code {
    private LoginModel loginModel { get; set; } = new();
    private bool loginError = false;
    public string errorMessage = string.Empty;
    private MudForm form;

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private async void KeyPressHandled(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
            await HandlerLogin();
    }

    void ButtonTestclick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task HandlerLogin()
    {
        var success = await AuthService.LoginAsync(loginModel);

        if (success.Succes)
            Navigation.NavigateTo("/");
        if (!success.Succes)
        {
            loginError = true;
            errorMessage = success.Message;
        }
    }
}
